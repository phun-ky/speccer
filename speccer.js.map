{"version":3,"file":"speccer.js","sources":["src/lib/node.ts","src/lib/classnames.ts","src/lib/constants.ts","src/lib/css.ts","src/lib/debounce.ts","src/lib/styles.ts","src/lib/position.ts","src/tasks/spec.ts","src/helpers/spacing/position.ts","src/enums/area.ts","src/lib/number.ts","src/tasks/dissect.ts","src/helpers/dissect/styles.ts","src/tasks/measure.ts","src/helpers/typography/position.ts","src/tasks/typography.ts","src/lib/resize.ts","src/browser.ts","src/index.ts","src/helpers/typography/template.ts"],"sourcesContent":["export const after = (el: HTMLElement | null, newSibling: HTMLElement) =>\n  el && el.insertAdjacentElement('afterend', newSibling);\n\nexport const removeAll = (selector: string, el: Document = document) => {\n  [].forEach.call(el.querySelectorAll(selector), function (e: HTMLElement) {\n    e.remove();\n  });\n};\n","/* eslint no-console:0 */\n'use strict';\n\nexport const set = (el: HTMLElement, cls: string, avoid = 'noop') => {\n  if (!el) return;\n\n  if (!cls || (cls && cls.length === 0)) return;\n\n  cls\n    .trim()\n    .split(' ')\n    .filter((cl) => cl !== avoid)\n    .forEach((cl) => el.classList.add(cl));\n};\n\nexport const toggle = (el: HTMLElement, cls: string, avoid = 'noop') => {\n  if (!el) return;\n\n  if (!cls || (cls && cls.length === 0)) return;\n\n  cls\n    .trim()\n    .split(' ')\n    .filter((cl) => cl !== avoid)\n    .forEach((cl) => el.classList.toggle(cl));\n};\n\nexport const remove = (el: HTMLElement, cls: string, avoid = 'noop') => {\n  if (!el) return;\n\n  if (!cls || (cls && cls.length === 0)) return;\n\n  cls\n    .trim()\n    .split(' ')\n    .filter((cl) => cl !== avoid)\n    .forEach((cl) => el.classList.remove(cl));\n};\n\nexport const cx = (cls: string, cls_obj: {}): string =>\n  `${cls} ${Object.keys(cls_obj)\n    .filter((classname) => cls_obj[classname])\n    .join(' ')}`.trim();\n","/* eslint no-console:0 */\n'use strict';\n\nexport const SPECCER_LITERALS = [...'ABCDEFGHIJKLMNOPQRSTUVWXYZ'];\n\nexport const SPECCER_TAGS_TO_AVOID = ['TR', 'TH', 'TD', 'TBODY', 'THEAD', 'TFOOT'];\n\nexport const SPECCER_DEFAULT_PIN_SPACE = 48;\n","/* eslint no-console:0 */\n'use strict';\nimport { SPECCER_DEFAULT_PIN_SPACE } from './constants';\nimport { SpacingCSSPropertiesType, TypographyCSSPropertiesType } from '../types/css';\n\nexport const getNumberValue = (value: string): number => parseInt(value, 10);\n\nexport const normalizeNumberValue = (value: string | number): number => {\n  const _value = parseFloat(value + '');\n\n  return (_value >= 0 && _value < 1) || (_value <= 0 && _value > -1) ? 0 : _value;\n};\n\nexport const getClassNameFromCSSProperty = (property: string) => {\n  if (property.indexOf('Top') !== -1) {\n    return property.replace('Top', ' top');\n  } else if (property.indexOf('Right') !== -1) {\n    return property.replace('Right', ' right');\n  } else if (property.indexOf('Bottom') !== -1) {\n    return property.replace('Bottom', ' bottom');\n  } else if (property.indexOf('Left') !== -1) {\n    return property.replace('Left', ' left');\n  }\n\n  return '';\n};\n\nexport const getSpacing = (style: SpacingCSSPropertiesType): SpacingCSSPropertiesType => {\n  const { marginTop, marginBottom, marginLeft, marginRight, paddingTop, paddingBottom, paddingLeft, paddingRight } =\n    style;\n\n  return {\n    marginTop,\n    marginBottom,\n    marginLeft,\n    marginRight,\n    paddingTop,\n    paddingBottom,\n    paddingLeft,\n    paddingRight\n  };\n};\n\nexport const getTypography = (style: TypographyCSSPropertiesType): TypographyCSSPropertiesType => {\n  const { lineHeight, letterSpacing, fontFamily, fontSize, fontStyle, fontVariationSettings, fontWeight } = style;\n\n  return {\n    lineHeight,\n    letterSpacing,\n    fontFamily,\n    fontSize,\n    fontStyle,\n    fontVariationSettings,\n    fontWeight\n  };\n};\n\nexport const pinSpace = (el: HTMLElement): number =>\n  getNumberValue(getComputedStyle(el).getPropertyValue('--ph-speccer-pin-space')) || SPECCER_DEFAULT_PIN_SPACE;\n","/* eslint no-console:0 */\n'use strict';\n\nexport const waitForFrame = () => new Promise(requestAnimationFrame);\n\nconst debounce = function (func: Function, wait: number, immediate?: boolean): Function {\n  let timeout: null | ReturnType<typeof setTimeout>;\n\n  return function (this: any) {\n    const context = this;\n    const args = arguments;\n    const later = function () {\n      timeout = null;\n\n      if (!immediate) func.apply(context, args);\n    };\n    const callNow = immediate && !timeout;\n\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n\n    timeout = setTimeout(later, wait);\n\n    if (callNow) func.apply(context, args);\n  };\n};\n\nexport default debounce;\n","/* eslint no-console:0 */\n'use strict';\nimport { waitForFrame } from './debounce';\n\nexport const add = async (el: HTMLElement, styles: [] | object) => {\n  if (\n    !el ||\n    !styles ||\n    typeof styles === 'string' ||\n    typeof styles === 'number' ||\n    typeof styles === 'boolean' ||\n    (Array.isArray(styles) && styles.length === 0) ||\n    (Object.keys(styles).length === 0 && styles.constructor === Object)\n  ) {\n    return;\n  }\n\n  await waitForFrame();\n\n  if (Array.isArray(styles)) {\n    styles.forEach((style: { key: string; value: string }) => (el.style[style.key] = style.value));\n  } else {\n    Object.keys(styles).forEach((key) => (el.style[key] = styles[key]));\n  }\n};\n\nexport const get = async (el: HTMLElement): Promise<CSSStyleDeclaration> => {\n  await waitForFrame();\n\n  return getComputedStyle(el, null);\n};\n","import { waitForFrame } from './debounce';\n\nexport const get_horizontal_center_of_els = (modifier: number, startRect: DOMRect, targetRect: DOMRect): number =>\n  modifier - startRect.width / 2 + targetRect.width / 2;\n\nexport const get_vertical_center_of_els = (modifier: number, startRect: DOMRect, targetRect: DOMRect): number =>\n  modifier - startRect.height / 2 + targetRect.height / 2;\n\nexport const offset = async (targetEl: HTMLElement): Promise<{ left: number; top: number }> => {\n  await waitForFrame();\n\n  const _target_rect = targetEl.getBoundingClientRect();\n  const _el_offset_top = _target_rect.top + window.pageYOffset;\n  const _el_offset_left = _target_rect.left + window.pageXOffset;\n\n  return {\n    top: _el_offset_top,\n    left: _el_offset_left\n  };\n};\n","/* eslint no-console:0 */\n'use strict';\n\nimport * as classnames from '../lib/classnames';\nimport * as css from '../lib/css';\nimport * as styles from '../lib/styles';\nimport * as helpers from '../helpers/spacing';\n\nexport const create = (text: string | number = '', tag = 'span') => {\n  const _el = document.createElement(tag);\n  const _text_content = document.createTextNode(text + '');\n\n  _el.appendChild(_text_content);\n  _el.setAttribute('title', text + 'px');\n  classnames.set(_el, 'ph speccer spacing');\n\n  return _el;\n};\n\nexport const element = async (targetEl: HTMLElement) => {\n  if (!targetEl) return;\n\n  const _target_styles = await styles.get(targetEl);\n\n  if (_target_styles.display === 'none' || _target_styles.opacity === '0' || _target_styles.visibility === 'hidden') {\n    return;\n  }\n\n  const _target_spacing_styles = css.getSpacing(_target_styles);\n  const _target_pruned_spacing_styles = Object.keys(_target_spacing_styles).filter((property) => {\n    const _value = _target_spacing_styles[property];\n\n    return _value !== '0px';\n  });\n\n  if (_target_pruned_spacing_styles.length === 0) return;\n\n  _target_pruned_spacing_styles.forEach(async (property) => {\n    const _value = css.getNumberValue(_target_spacing_styles[property]);\n    const _speccer_el = create(_value);\n    const _class_name = css.getClassNameFromCSSProperty(property);\n\n    classnames.set(_speccer_el, _class_name);\n    document.body.appendChild(_speccer_el);\n\n    targetEl.classList.add('is-specced');\n    await helpers.position(property, _value, _speccer_el, targetEl);\n  });\n};\n","import * as styles from '../../lib/styles';\nimport { offset } from '../../lib/position';\nimport { waitForFrame } from '../../lib/debounce';\n\nexport const position = async (property: string, value: number, spacingEl: HTMLElement, targetEl: HTMLElement) => {\n  await waitForFrame();\n\n  const _target_rect = targetEl.getBoundingClientRect();\n  const _target_offset = await offset(targetEl);\n\n  if (property === 'marginTop') {\n    styles.add(spacingEl, {\n      height: `${value}px`,\n      width: _target_rect.width + 'px',\n      left: _target_offset.left + 'px',\n      top: _target_offset.top - value + 'px'\n    });\n  }\n\n  if (property === 'marginRight') {\n    styles.add(spacingEl, {\n      height: _target_rect.height + 'px',\n      width: `${value}px`,\n      left: _target_offset.left + parseInt(_target_rect.width + '', 10) + 'px',\n      top: _target_offset.top + 'px'\n    });\n  }\n\n  if (property === 'marginBottom') {\n    styles.add(spacingEl, {\n      height: `${value}px`,\n      width: _target_rect.width + 'px',\n      left: _target_offset.left + 'px',\n      top: _target_offset.top + parseInt(_target_rect.height + '', 10) + 'px'\n    });\n  }\n\n  if (property === 'marginLeft') {\n    styles.add(spacingEl, {\n      height: _target_rect.height + 'px',\n      width: `${value}px`,\n      left: _target_offset.left - value + 'px',\n      top: _target_offset.top + 'px'\n    });\n  }\n\n  if (property === 'paddingTop') {\n    styles.add(spacingEl, {\n      height: `${value}px`,\n      width: _target_rect.width + 'px',\n      left: _target_offset.left + 'px',\n      top: _target_offset.top + 'px'\n    });\n  }\n\n  if (property === 'paddingBottom') {\n    styles.add(spacingEl, {\n      height: `${value}px`,\n      width: _target_rect.width + 'px',\n      left: _target_offset.left + 'px',\n      top: _target_offset.top + (parseInt(_target_rect.height + '', 10) - value) + 'px'\n    });\n  }\n\n  if (property === 'paddingRight') {\n    styles.add(spacingEl, {\n      height: _target_rect.height + 'px',\n      width: `${value}px`,\n      left: _target_offset.left + (parseInt(_target_rect.width + '', 10) - value) + 'px',\n      top: _target_offset.top + 'px'\n    });\n  }\n\n  if (property === 'paddingLeft') {\n    styles.add(spacingEl, {\n      height: _target_rect.height + 'px',\n      width: `${value}px`,\n      left: _target_offset.left + 'px',\n      top: _target_offset.top + 'px'\n    });\n  }\n};\n","export enum SpeccerAreaEnum {\n  Empty = '',\n  Left = 'left',\n  Right = 'right',\n  Bottom = 'bottom',\n  Top = 'top',\n}\n\nexport enum DissectAreaEnum {\n  Outline = 'outline',\n  Enclose = 'enclose',\n  Full = 'full',\n  Left = 'left',\n  Right = 'right',\n  Bottom = 'bottom',\n  Top = 'top',\n}\n","/* eslint no-console:0 */\n'use strict';\n\nexport const decimal = (number: string | number, decimals = 3): string => parseFloat(number + '').toFixed(decimals);\n","/* eslint no-console:0 */\n'use strict';\n\nimport * as styles from '../lib/styles';\nimport * as classnames from '../lib/classnames';\nimport { DissectAreaEnum } from '../enums/area';\nimport * as helpers from '../helpers/dissect';\nimport { SPECCER_LITERALS } from '../lib/constants';\n\nexport const create = (textContent = '', area: string, n = 'span') => {\n  const _el = document.createElement(n);\n  const _text_node = document.createTextNode(textContent);\n  const _extra_class_names = {};\n\n  if (area !== null && area !== '') {\n    _extra_class_names[area] = true;\n  }\n\n  if (area.indexOf(DissectAreaEnum.Full) === -1 && area.indexOf(DissectAreaEnum.Enclose) === -1) {\n    _el.appendChild(_text_node);\n  } else if (area.indexOf(DissectAreaEnum.Full) !== -1 || area.indexOf(DissectAreaEnum.Enclose) !== -1) {\n    _el.setAttribute('data-dissection-counter', textContent);\n  }\n\n  const _class_names = classnames.cx('ph speccer dissection', _extra_class_names);\n\n  classnames.set(_el, _class_names);\n\n  return _el;\n};\n\nexport const element = (sectionEl: HTMLElement) => {\n  if (!sectionEl) return;\n\n  const _dissection_els = sectionEl.querySelectorAll('[data-anatomy]');\n\n  if (_dissection_els) {\n    _dissection_els.forEach(async (targetEl: HTMLElement, targetIndex) => {\n      if (!targetEl) return;\n\n      const _area: string | null = targetEl.getAttribute('data-anatomy') || '';\n\n      if (!_area || _area === '') return;\n\n      const _dissection_el = create(SPECCER_LITERALS[targetIndex], _area);\n\n      document.body.appendChild(_dissection_el);\n\n      const _dissection_styles = await helpers.styles(_area, targetEl, _dissection_el);\n\n      styles.add(_dissection_el, _dissection_styles);\n    });\n  }\n};\n","import * as css from '../../lib/css';\nimport * as number from '../../lib/number';\nimport { get_horizontal_center_of_els, get_vertical_center_of_els, offset } from '../../lib/position';\nimport { DissectAreaEnum } from '../../enums/area';\n\nexport const styles = async (area: string, targetEl: HTMLElement, dissectionEl: HTMLElement) => {\n  const _target_rect = targetEl.getBoundingClientRect();\n  const _dissection_el_rect = dissectionEl.getBoundingClientRect();\n  const SPECCER_PIN_SPACE = css.pinSpace(dissectionEl);\n  const _el_offset = await offset(targetEl);\n  const _left_layout_position_left = _el_offset.left - _dissection_el_rect.width - SPECCER_PIN_SPACE + 'px';\n  const _left_layout_position_top =\n    number.decimal(get_vertical_center_of_els(_el_offset.top, _dissection_el_rect, _target_rect)) + 'px';\n  const _right_layout_position_left = _el_offset.left + _target_rect.width + SPECCER_PIN_SPACE + 'px';\n  const _right_layout_position_top =\n    number.decimal(get_vertical_center_of_els(_el_offset.top, _dissection_el_rect, _target_rect)) + 'px';\n  const _top_layout_position_left =\n    number.decimal(get_horizontal_center_of_els(_el_offset.left, _dissection_el_rect, _target_rect)) + 'px';\n  const _top_layout_position_top = _el_offset.top - _dissection_el_rect.height - SPECCER_PIN_SPACE + 'px';\n  const _bottom_layout_position_left =\n    number.decimal(get_horizontal_center_of_els(_el_offset.left, _dissection_el_rect, _target_rect)) + 'px';\n  const _bottom_layout_position_top = _el_offset.top + _target_rect.height + SPECCER_PIN_SPACE + 'px';\n\n  let _dissection_styles = {};\n\n  if (area.indexOf(DissectAreaEnum.Outline) !== -1) {\n    if (area.indexOf(DissectAreaEnum.Left) !== -1) {\n      if (area.indexOf(DissectAreaEnum.Full) !== -1) {\n        _dissection_styles = {\n          left: _el_offset.left - 8 + 'px',\n          top: _el_offset.top + -1 + 'px',\n          height: _target_rect.height + 'px'\n        };\n      } else if (area.indexOf(DissectAreaEnum.Enclose) !== -1) {\n        _dissection_styles = {\n          left: _el_offset.left - 1 + 'px',\n          top: _el_offset.top + -1 + 'px',\n          height: _target_rect.height + 'px',\n          width: _target_rect.width + 'px'\n        };\n      } else {\n        _dissection_styles = {\n          left: _left_layout_position_left,\n          top: _left_layout_position_top\n        };\n      }\n    } else if (area.indexOf(DissectAreaEnum.Right) !== -1) {\n      if (area.indexOf(DissectAreaEnum.Full) !== -1) {\n        _dissection_styles = {\n          left: _el_offset.left + _target_rect.width + 'px',\n          top: _el_offset.top + -1 + 'px',\n          height: _target_rect.height + 'px'\n        };\n      } else if (area.indexOf(DissectAreaEnum.Enclose) !== -1) {\n        _dissection_styles = {\n          left: _el_offset.left + -1 + 'px',\n          top: _el_offset.top + -1 + 'px',\n          height: _target_rect.height + 'px',\n          width: _target_rect.width + 'px'\n        };\n      } else {\n        _dissection_styles = {\n          left: _right_layout_position_left,\n          top: _right_layout_position_top\n        };\n      }\n    } else if (area.indexOf(DissectAreaEnum.Top) !== -1) {\n      if (area.indexOf(DissectAreaEnum.Full) !== -1) {\n        _dissection_styles = {\n          top: _el_offset.top + -8 + 'px',\n          left: _el_offset.left + -1 + 'px',\n          width: _target_rect.width + 'px'\n        };\n      } else if (area.indexOf(DissectAreaEnum.Enclose) !== -1) {\n        _dissection_styles = {\n          top: _el_offset.top + -1 + 'px',\n          left: _el_offset.left + -1 + 'px',\n          height: _target_rect.height + 'px',\n          width: _target_rect.width + 'px'\n        };\n      } else {\n        _dissection_styles = {\n          left: _top_layout_position_left,\n          top: _top_layout_position_top\n        };\n      }\n    } else if (area.indexOf(DissectAreaEnum.Bottom) !== -1) {\n      if (area.indexOf(DissectAreaEnum.Full) !== -1) {\n        _dissection_styles = {\n          top: _el_offset.top + _target_rect.height + 'px',\n          left: _el_offset.left + -1 + 'px',\n          width: _target_rect.width + 'px'\n        };\n      } else if (area.indexOf(DissectAreaEnum.Enclose) !== -1) {\n        _dissection_styles = {\n          top: _el_offset.top + -1 + 'px',\n          left: _el_offset.left + -1 + 'px',\n          height: _target_rect.height + 'px',\n          width: _target_rect.width + 'px'\n        };\n      } else {\n        _dissection_styles = {\n          left: _bottom_layout_position_left,\n          top: _bottom_layout_position_top\n        };\n      }\n    } else {\n      if (area.indexOf(DissectAreaEnum.Full) !== -1) {\n        _dissection_styles = {\n          left: _el_offset.left + _target_rect.width + 'px',\n          top: _el_offset.top + 'px',\n          height: _target_rect.height + 'px'\n        };\n      } else if (area.indexOf(DissectAreaEnum.Enclose) !== -1) {\n        _dissection_styles = {\n          left: _el_offset.left + _target_rect.width + 'px',\n          top: _el_offset.top + -1 + 'px',\n          height: _target_rect.height + 'px',\n          width: _target_rect.width + 'px'\n        };\n      } else {\n        _dissection_styles = {\n          left: _left_layout_position_left,\n          top: _left_layout_position_top\n        };\n      }\n    }\n  } else {\n    if (area.indexOf(DissectAreaEnum.Full) !== -1) {\n      _dissection_styles = {\n        left: _el_offset.left - 8 + 'px',\n        top: _el_offset.top + -1 + 'px',\n        height: _target_rect.height + 'px'\n      };\n    } else if (area.indexOf(DissectAreaEnum.Enclose) !== -1) {\n      _dissection_styles = {\n        left: _el_offset.left - 1 + 'px',\n        top: _el_offset.top + -1 + 'px',\n        height: _target_rect.height + 'px',\n        width: _target_rect.width + 'px'\n      };\n    } else {\n      _dissection_styles = {\n        left: _left_layout_position_left,\n        top: _left_layout_position_top\n      };\n    }\n  }\n\n  return _dissection_styles;\n};\n","/* eslint no-console:0 */\n'use strict';\n\nimport * as classnames from '../lib/classnames';\nimport * as styles from '../lib/styles';\nimport { waitForFrame } from '../lib/debounce';\n\nconst create = (text: string | number = '', area: string | null = '', tag = 'span') => {\n  const _el = document.createElement(tag);\n\n  _el.setAttribute('title', text + 'px');\n  _el.setAttribute('data-measure', parseInt(text + '', 10) + 'px');\n\n  classnames.set(_el, `ph speccer measure ${area}`);\n\n  return _el;\n};\n\nexport const element = async (targetEl: HTMLElement) => {\n  if (!targetEl) return;\n\n  const _area: string | null = targetEl.getAttribute('data-speccer-measure');\n\n  if (_area === '' || !_area) {\n    return;\n  }\n\n  const _target_styles = await styles.get(targetEl);\n\n  if (_target_styles.display === 'none' || _target_styles.opacity === '0' || _target_styles.visibility === 'hidden') {\n    return;\n  }\n\n  await waitForFrame();\n\n  const _target_rect = targetEl.getBoundingClientRect();\n  const _el_offset_top = _target_rect.top + window.pageYOffset;\n  const _el_offset_left = _target_rect.left + window.pageXOffset;\n\n  if (_area.indexOf('width') !== -1) {\n    if (_area.indexOf('bottom') !== -1) {\n      const _measure_el = create(_target_rect.width, _area);\n\n      document.body.appendChild(_measure_el);\n\n      styles.add(_measure_el, {\n        left: _el_offset_left + 'px',\n        top: _el_offset_top + _target_rect.height + 1 + 'px',\n        width: _target_rect.width + 'px'\n      });\n    } else {\n      const _measure_el = create(_target_rect.width, _area);\n\n      document.body.appendChild(_measure_el);\n\n      const _measure_rect = _measure_el.getBoundingClientRect();\n\n      styles.add(_measure_el, {\n        left: _el_offset_left + 'px',\n        top: _el_offset_top - _measure_rect.height + 1 + 'px',\n        width: _target_rect.width + 'px'\n      });\n    }\n  } else if (_area.indexOf('height') !== -1) {\n    if (_area.indexOf('right') !== -1) {\n      const _measure_el = create(_target_rect.height, _area);\n\n      document.body.appendChild(_measure_el);\n\n      styles.add(_measure_el, {\n        left: _el_offset_left + _target_rect.width + 'px',\n        top: _el_offset_top + 'px',\n        height: _target_rect.height + 'px'\n      });\n    } else {\n      const _measure_el = create(_target_rect.height, _area);\n\n      document.body.appendChild(_measure_el);\n\n      const _measure_rect = _measure_el.getBoundingClientRect();\n\n      styles.add(_measure_el, {\n        left: _el_offset_left - _measure_rect.width + 'px',\n        top: _el_offset_top + 'px',\n        height: _target_rect.height + 'px'\n      });\n    }\n  }\n};\n","import * as css from '../../lib/css';\nimport * as number from '../../lib/number';\nimport { get_horizontal_center_of_els, get_vertical_center_of_els, offset } from '../../lib/position';\nimport { SpeccerAreaEnum } from '../../enums/area';\n\nexport const position = async (area: string | null, targetEl: HTMLElement, speccerEl: HTMLElement) => {\n  const _target_rect = targetEl.getBoundingClientRect();\n  const SPECCER_PIN_SPACE = css.pinSpace(speccerEl);\n  const _speccer_el_rect = speccerEl.getBoundingClientRect();\n  const _el_offset = await offset(targetEl);\n  const _left_layout_position_left = _el_offset.left - _speccer_el_rect.width - SPECCER_PIN_SPACE + 'px';\n  const _left_layout_position_top =\n    number.decimal(get_vertical_center_of_els(_el_offset.top, _speccer_el_rect, _target_rect)) + 'px';\n  const _right_layout_position_left = _el_offset.left + _target_rect.width + SPECCER_PIN_SPACE + 'px';\n  const _right_layout_position_top =\n    number.decimal(get_vertical_center_of_els(_el_offset.top, _speccer_el_rect, _target_rect)) + 'px';\n  const _top_layout_position_left =\n    number.decimal(get_horizontal_center_of_els(_el_offset.left, _speccer_el_rect, _target_rect)) + 'px';\n  const _top_layout_position_top = _el_offset.top - _speccer_el_rect.height - SPECCER_PIN_SPACE + 'px';\n  const _bottom_layout_position_left =\n    number.decimal(get_horizontal_center_of_els(_el_offset.left, _speccer_el_rect, _target_rect)) + 'px';\n  const _bottom_layout_position_top = _el_offset.top + _target_rect.height + SPECCER_PIN_SPACE + 'px';\n\n  let _position = {\n    left: _left_layout_position_left,\n    top: _left_layout_position_top\n  };\n\n  if (area && area.indexOf(SpeccerAreaEnum.Right) !== -1) {\n    _position = {\n      left: _right_layout_position_left,\n      top: _right_layout_position_top\n    };\n  } else if (area && area.indexOf(SpeccerAreaEnum.Top) !== -1) {\n    _position = {\n      left: _top_layout_position_left,\n      top: _top_layout_position_top\n    };\n  } else if (area && area.indexOf(SpeccerAreaEnum.Bottom) !== -1) {\n    _position = {\n      left: _bottom_layout_position_left,\n      top: _bottom_layout_position_top\n    };\n  }\n\n  return _position;\n};\n","/* eslint no-console:0 */\n'use strict';\n\nimport * as classnames from '../lib/classnames';\nimport * as styles from '../lib/styles';\nimport * as helpers from '../helpers/typography';\n\nexport const create = (html: string, area: string | null) => {\n  const _el = document.createElement('div');\n  const _extra_class_names = {};\n\n  if (area !== null && area !== '') {\n    _extra_class_names[area] = true;\n  }\n\n  const _class_names = classnames.cx('ph speccer typography', _extra_class_names);\n\n  _el.innerHTML = html;\n\n  classnames.set(_el, _class_names);\n\n  return _el;\n};\n\nexport const element = async (targetEl: HTMLElement) => {\n  if (!targetEl) return;\n\n  const _area: string | null = targetEl.getAttribute('data-speccer-typography');\n  const _target_styles = await styles.get(targetEl);\n\n  if (_target_styles.display === 'none' || _target_styles.opacity === '0' || _target_styles.visibility === 'hidden') {\n    return;\n  }\n\n  targetEl.classList.add('is-specced');\n\n  const _html = await helpers.template(targetEl);\n  const _speccer_el = create(_html, _area);\n\n  document.body.appendChild(_speccer_el);\n\n  const _position = await helpers.position(_area, targetEl, _speccer_el);\n\n  styles.add(_speccer_el, _position);\n};\n","/* eslint no-console:0 */\n'use strict';\n\nimport debounce from './debounce';\n\nexport const activate = (speccer: Function) => {\n  const speccerEventFunc = () =>\n    debounce(() => {\n      speccer();\n    }, 300);\n\n  window.removeEventListener('resize', speccerEventFunc);\n  window.addEventListener('resize', speccerEventFunc);\n};\n","/* eslint no-console:0 */\n'use strict';\n\nimport * as resize from './lib/resize';\nimport * as spec from './tasks/spec';\nimport * as measure from './tasks/measure';\nimport * as dissect from './tasks/dissect';\n\nexport const dom = (speccer: Function) => {\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', () => {\n      speccer();\n    });\n  } else {\n    // `DOMContentLoaded` already fired\n    speccer();\n  }\n};\n\nexport const lazy = () => {\n  const _spec_observer = new IntersectionObserver((els, observer) => {\n    els.forEach((el: IntersectionObserverEntry) => {\n      if (el.intersectionRatio > 0) {\n        spec.element(el.target as HTMLElement);\n        observer.unobserve(el.target);\n      }\n    });\n  });\n\n  document.querySelectorAll('[data-speccer],[data-speccer] *:not(td)').forEach((el) => {\n    _spec_observer.observe(el);\n  });\n\n  const _measure_observer = new IntersectionObserver((els, observer) => {\n    els.forEach((el) => {\n      if (el.intersectionRatio > 0) {\n        measure.element(el.target as HTMLElement);\n        observer.unobserve(el.target);\n      }\n    });\n  });\n\n  document.querySelectorAll('[data-speccer-measure]').forEach((el) => {\n    _measure_observer.observe(el);\n  });\n\n  const _dissect_observer = new IntersectionObserver((els, observer) => {\n    els.forEach((el) => {\n      const targets = el.target.querySelectorAll('[data-anatomy]');\n\n      if (el.intersectionRatio > 0) {\n        targets.forEach(dissect.element);\n        observer.unobserve(el.target);\n      }\n    });\n  });\n\n  document.querySelectorAll('[data-anatomy-section]').forEach((el) => {\n    _dissect_observer.observe(el);\n  });\n};\n\nexport const manual = (speccer: Function) => {\n  window.speccer = speccer;\n};\n\nexport const activate = (speccer: Function) => {\n  const _script = document.currentScript;\n\n  if (_script) {\n    const _speccer_script_src = _script.getAttribute('src');\n\n    if (\n      _speccer_script_src &&\n      (_speccer_script_src.indexOf('speccer.js') !== -1 ||\n        // for codepen\n        _speccer_script_src.indexOf('JaXpOK.js') !== -1)\n    ) {\n      if (_script.hasAttribute('data-manual')) {\n        manual(speccer);\n      } else if (_script.hasAttribute('data-instant')) {\n        speccer();\n      } else if (_script.hasAttribute('data-dom')) {\n        dom(speccer);\n      } else if (_script.hasAttribute('data-lazy')) {\n        lazy();\n      } else {\n        dom(speccer);\n      }\n\n      if (!_script.hasAttribute('data-manual') && !_script.hasAttribute('data-lazy')) {\n        resize.activate(speccer);\n      }\n    }\n  }\n};\n","/* eslint no-console:0 */\n'use strict';\n\nimport './interfaces/global';\nimport * as node from './lib/node';\nimport * as __spacing from './tasks/spec';\nimport * as __dissect from './tasks/dissect';\nimport * as __measure from './tasks/measure';\nimport * as __typography from './tasks/typography';\nimport * as browser from './browser';\n\nexport const spacing = __spacing;\n\nexport const dissect = __dissect;\n\nexport const measure = __measure;\n\nexport const typography = __typography;\n\nconst speccer = () => {\n  node.removeAll('.speccer');\n\n  const _els_to_be_specced = document.querySelectorAll(\n    '[data-speccer],[data-speccer] *:not(td):not(tr):not(th):not(tfoot):not(thead):not(tbody)'\n  );\n  const _els_to_be_measured = document.querySelectorAll('[data-speccer-measure]');\n  const _els_to_be_typography_specced = document.querySelectorAll('[data-speccer-typography]');\n  const _els_to_be_dissected = document.querySelectorAll('[data-anatomy-section]');\n\n  _els_to_be_specced.forEach(spacing.element);\n  _els_to_be_measured.forEach(measure.element);\n  _els_to_be_typography_specced.forEach(typography.element);\n  _els_to_be_dissected.forEach(dissect.element);\n};\n\nexport default speccer;\n\nbrowser.activate(speccer);\n","import * as css from '../../lib/css';\nimport * as styles from '../../lib/styles';\n\nexport const template = async (targetEl: HTMLElement): Promise<string> => {\n  const _target_styles = await styles.get(targetEl);\n  const _styles = css.getTypography(_target_styles);\n  const _line_height = _styles['lineHeight'] !== 'normal' ? parseInt(_styles['lineHeight'], 10) / 16 + 'rem' : 'normal';\n\n  return (\n    `\n` +\n    'font-styles: {' +\n    '<ul class=\"speccer-styles\">' +\n    `  <li><span class=\"property\">font-family:</span> ${_styles['fontFamily']};</li>` +\n    `  <li><span class=\"property\">font-size:</span> ${_styles['fontSize']} / ${\n      parseInt(_styles['fontSize'], 10) / 16\n    }rem;</li>` +\n    `  <li><span class=\"property\">font-weight:</span> ${_styles['fontWeight']};</li>` +\n    `  <li><span class=\"property\">font-variation-settings:</span> ${_styles['fontVariationSettings']};</li>` +\n    `  <li><span class=\"property\">line-height:</span> ${_styles['lineHeight']} / ${_line_height};</li>` +\n    `  <li><span class=\"property\">letter-spacing:</span> ${_styles['letterSpacing']};</li>` +\n    `  <li><span class=\"property\">font-style:</span> ${_styles['fontStyle']};</li>` +\n    '</ul>' +\n    '}'\n  );\n};\n"],"names":["set","el","cls","avoid","length","trim","split","filter","cl","forEach","classList","add","cx","cls_obj","Object","keys","classname","join","SPECCER_LITERALS","getNumberValue","value","parseInt","pinSpace","getComputedStyle","getPropertyValue","waitForFrame","Promise","requestAnimationFrame","async","styles","Array","isArray","constructor","style","key","get","get_horizontal_center_of_els","modifier","startRect","targetRect","width","get_vertical_center_of_els","height","offset","targetEl","_target_rect","getBoundingClientRect","top","window","pageYOffset","left","pageXOffset","create","text","tag","_el","document","createElement","_text_content","createTextNode","appendChild","setAttribute","classnames.set","element","_target_styles","styles.get","display","opacity","visibility","_target_spacing_styles","marginTop","marginBottom","marginLeft","marginRight","paddingTop","paddingBottom","paddingLeft","paddingRight","css.getSpacing","_target_pruned_spacing_styles","property","_value","css.getNumberValue","_speccer_el","_class_name","indexOf","replace","css.getClassNameFromCSSProperty","body","spacingEl","_target_offset","styles.add","helpers.position","SpeccerAreaEnum","DissectAreaEnum","decimal","number","decimals","parseFloat","toFixed","textContent","area","n","_text_node","_extra_class_names","Full","Enclose","_class_names","classnames.cx","sectionEl","_dissection_els","querySelectorAll","targetIndex","_area","getAttribute","_dissection_el","_dissection_styles","dissectionEl","_dissection_el_rect","SPECCER_PIN_SPACE","css.pinSpace","_el_offset","_left_layout_position_left","_left_layout_position_top","number.decimal","_right_layout_position_left","_right_layout_position_top","_top_layout_position_left","_top_layout_position_top","_bottom_layout_position_left","_bottom_layout_position_top","Outline","Left","Right","Top","Bottom","helpers.styles","_el_offset_top","_el_offset_left","_measure_el","_measure_rect","html","innerHTML","activate","speccer","speccerEventFunc","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","debounce","removeEventListener","addEventListener","dom","readyState","spacing","__spacing","dissect","measure","typography","_html","_styles","lineHeight","letterSpacing","fontFamily","fontSize","fontStyle","fontVariationSettings","fontWeight","css.getTypography","_line_height","helpers.template","_position","speccerEl","_speccer_el_rect","selector","call","e","remove","node.removeAll","_els_to_be_specced","_els_to_be_measured","_els_to_be_typography_specced","_els_to_be_dissected","_script","currentScript","_speccer_script_src","hasAttribute","manual","_spec_observer","IntersectionObserver","els","observer","intersectionRatio","spec.element","target","unobserve","observe","_measure_observer","measure.element","_dissect_observer","targets","dissect.element","lazy","resize.activate"],"mappings":"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"}